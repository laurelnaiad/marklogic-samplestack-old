{"OwnerUser":{"UpVotes":"57", "WebsiteUrl":"", "DownVotes":"0", "Id":"1740", "AccountId":"1668748", "Views":"4", "Reputation":"228", "CreationDate":"2013-02-06T18:27:17.667", "DisplayName":"senshin", "LastAccessDate":"2014-01-10T06:33:20.200", "AboutMe":""}, "comments":[], "Body":"<p>You may have heard that the language <code>{a^n b^n | n ∈ ℕ}</code> is a classic example of a language that is context-free but not regular.</p>\n\n<p>It turns out that a slight variant of this language, <code>{a^n b^n c^n | n ∈ ℕ}</code>, is context-sensitive but not context-free. To show that it is not context-free, we will use the pumping lemma for context-free grammars in a proof by contradiction. (All context-free languages can be pumped => all non-pumpable languages are non-context-free. The opposite is not true - some pumpable languages are non-context-free.)</p>\n\n<hr>\n\n<p>Assume that <code>L = {a^n b^n c^n | n ∈ ℕ}</code> is a context-free language. Then, by the pumping lemma, there is some pumping length <code>p</code> such that all strings that have a length of <code>p</code> or greater can be written in the form <code>uvxyz</code>, with the following constraints:</p>\n\n<ul>\n<li><code>|vxy| ≤ p</code></li>\n<li><code>|vy| ≥ 1</code></li>\n<li><code>u v^n x y^n z</code> is in <code>L</code> for all <code>n ∈ ℕ</code></li>\n</ul>\n\n<p>We will describe all strings meeting these conditions as \"pumpable\".</p>\n\n<p>Then, the string <code>s = a^p b^p c^p</code> should be pumpable (its length is <code>3p ≥ p</code>). Let us consider the ways in which we can write <code>s</code> in the form <code>uvxyz</code>, focusing on the center three substrings <code>vxy</code>. We have the following cases:</p>\n\n<ol>\n<li><code>vxy = a^α</code> for some <code>α ≤ p</code></li>\n<li><code>vxy = b^β</code> for some <code>β ≤ p</code></li>\n<li><code>vxy = c^γ</code> for some <code>γ ≤ p</code></li>\n<li><code>vxy = a^α b^β</code> for some <code>α + β ≤ p</code></li>\n<li><code>vxy = b^β c^γ</code> for some <code>β + γ ≤ p</code></li>\n</ol>\n\n<p>Note that since we must have <code>|vxy| ≤ p</code>, <code>vxy</code> cannot contain all three symbols <code>a</code>, <code>b</code>, and <code>c</code> (if it did, <code>|vxy|</code> would have to be at least <code>p+2</code>).</p>\n\n<p>Note also that in each of these cases, at least one of <code>v</code> and <code>y</code> must be non-empty, to meet the condition <code>|vy| ≥ 1</code>.</p>\n\n<p>Now, to derive the contradiction, we will consider the strings <code>u v^n x y^n z</code> for each of these cases and show that they are not in <code>L</code> for some <code>n</code>.</p>\n\n<ol>\n<li><code>u v^n x y^n z = a^ω b^p c^p</code>, where <code>ω</code> varies depending on how <code>vxy</code> is split up into <code>v</code>, <code>x</code>, and <code>y</code>. The important thing to see here is that if <code>ω</code> varies, it cannot be equal to <code>p</code> for all <code>n</code>. Thus, there are some <code>n</code> for which (under this <code>uvxyz</code> decomposition scheme) <code>u v^n x y^n z</code> is not in <code>L</code>. This is a contradiction.</li>\n<li><code>u v^n x y^n z = a^p b^ω c^p</code>, with the same argument as for (1). Contradiction.</li>\n<li><code>u v^n x y^n z = a^p b^p c^ω</code>, with the same argument as for (1). Contradiction.</li>\n<li><code>u v^n x y^n z = a^ψ b^ω c^p</code>, with at least one of <code>ψ</code> and <code>ω</code> varying depending on how <code>vxy</code> is split up (that is, at least one of <code>v</code> and <code>y</code> must be non-empty). The argument from (1) follows. Contradiction.</li>\n<li><code>u v^n x y^n z = a^p b^ψ c^ω</code>, with the same argument as for (4). Contradiction.</li>\n</ol>\n\n<p>In each of our cases, <code>a^p b^p c^p</code> cannot be written in the form <code>uvxyz</code> in a way that meets the requirements of the pumping lemma. This means that <code>a^p b^p c^p</code> is not pumpable. This contradicts our assumption <code>a^p b^p c^p</code>, being an element of the CFL <code>L</code> of length greater than or equal to <code>p</code>, was pumpable.</p>\n\n<p>Conclusion: <code>L</code> is not a context-free language.</p>\n\n<hr>\n\n<p>To show that <code>L</code> is a context-sensitive language, we just need to write the context-sensitive production rules for <code>L</code>. Let <code>S</code> be the start symbol, <code>ε</code> be the empty string, and <code>{H, B, C}</code> be the non-terminals. </p>\n\n<ul>\n<li><code>S -&gt; aSBC</code></li>\n<li><code>S -&gt; aBC</code></li>\n<li><code>εCB -&gt; εHB</code></li>\n<li><code>HBε -&gt; HCε</code></li>\n<li><code>εHC -&gt; εBC</code></li>\n<li><code>aBε -&gt; abε</code></li>\n<li><code>bBε -&gt; bbε</code></li>\n<li><code>bCε -&gt; bcε</code></li>\n<li><code>cCε -&gt; ccε</code></li>\n</ul>\n\n<p>(I have cribbed these <a href=\"http://en.wikipedia.org/wiki/Context-sensitive_grammar\" rel=\"nofollow\">from Wikipedia</a>.)</p>\n\n<p>It follows from these production rules that all strings of the form <code>a^n b^n c^n</code> can be generated, and so that <code>L</code> is a context-sensitive language.</p>\n\n<hr>\n\n<p>This isn't a very intuitive example, but I don't know if there really are any better examples. There are some languages I can think of that are intuitively non-regular, but nothing intuitively non-context-free pops out at me. A more direct proof for this <code>L</code> that doesn't invoke a contradiction to the pumping lemma would also be nice, but I'm not aware of one. </p>\n\n<p>As far as examples in natural languages go, it's my understanding (as a linguistics amateur) that <a href=\"http://www.eecs.harvard.edu/~shieber/Biblio/Papers/shieber85.pdf\" rel=\"nofollow\">Shieber 1985, \"Evidence Against the Context-Freeness of Natural Language\"</a> is an important paper; you might like to take a look at that.</p>\n\n<hr>\n\n<p>As I finished writing this, I saw that this question was tagged with [natural-languages], so I guess this is kind of an off-topic ramble. Sorry about that.</p>\n", "Id":"4309", "ParentId":"4294", "CreationDate":"2013-08-29T00:43:02.520", "Score":"1", "PostTypeId":"2", "OwnerUserId":"1740", "LastActivityDate":"2013-08-29T00:43:02.520", "CommentCount":"1"}