{"Body":"<p>I ended up finding a nice way to do it. Inspired by the way \"All men visited a garden\" which doesn't have any problems with the high number of entities, I make my NP have the meaning</p>\n\n<pre><code>λvp.∃x(man(x) ∧ ∃y(woman(y) ∧ ∀z(z=x ∨ z=y → vp z)))\n</code></pre>\n\n<p>That is, I let</p>\n\n<pre><code>np1 `and` np2 = λvp.np1(λx.np2(λy.∀z.z=x ∨ z=y → vp z))\n</code></pre>\n\n<p>It looks slightly less nice than what's been suggested, and you'll need different <code>and</code>s for different typesl, but the nice thing is that it works even if our original sentence was something complicated like:</p>\n\n<blockquote>\n  <p>Every man and every woman and some child ...</p>\n</blockquote>\n\n<p>Which simply becomes</p>\n\n<pre><code>λvp.∀x(man(x) → ∀y(woman(y) → ∃c(child(c) ∧ ∀z((z=x ∨ z=y v z=c) → vp(z)))))\n</code></pre>\n", "Id":"3615", "ParentId":"3612", "LastEditorUserId":"2001", "CreationDate":"2013-04-27T17:21:49.513", "OwnerUserId":"2001", "PostTypeId":"2", "comments":[], "LastEditDate":"2013-04-28T19:43:53.423", "LastEditedUser":{"UpVotes":"0", "WebsiteUrl":"http://thomas.ahle.dk", "Location":"Denmark", "Id":"2001", "DownVotes":"0", "AccountId":"71043", "Views":"1", "Reputation":"131", "CreationDate":"2013-04-26T17:17:06.513", "DisplayName":"Thomas Ahle", "LastAccessDate":"2013-06-21T22:16:25.523"}, "LastActivityDate":"2013-04-28T19:43:53.423", "Score":"1", "CommentCount":"3", "OwnerUser":{"UpVotes":"0", "WebsiteUrl":"http://thomas.ahle.dk", "Location":"Denmark", "Id":"2001", "DownVotes":"0", "AccountId":"71043", "Views":"1", "Reputation":"131", "CreationDate":"2013-04-26T17:17:06.513", "DisplayName":"Thomas Ahle", "LastAccessDate":"2013-06-21T22:16:25.523"}}