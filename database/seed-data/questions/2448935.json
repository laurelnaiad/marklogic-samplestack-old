{
  "id": "/questions/questions/2448935.json",
  "creationDate": "2010-03-15T16:59:20.617",
  "body": "\n\nI'm creating a domain model where entities often (but not always) have a member of type `ActionLog`. \n\n`ActionLog` is a simple class which allows for an audit trail of actions being performed on an instance. Each action is recorded as an `ActionLogEntry` instance.\n\n`ActionLog` is implemented (approximately) as follows:\n\n\tpublic class ActionLog\n\t{   \n\t    public IEnumerable<ActionLogEntry> Entries\n\t    {\n\t        get { return EntriesCollection; }\n\t    }\n\t\n\t    protected ICollection<ActionLogEntry> EntriesCollection { get; set; }\n\t\n\t    public void AddAction(string action)\n\t    {\n\t        // Append to entries collection.\n\t    }\n\t}\n\t\n\nWhat I would like is to re-use this class amongst my entities and have the entries map to different tables based on which class they are logged against. For example:\n\n\tpublic class Customer\n\t{\n\t    public ActionLog Actions { get; protected set; }\n\t}\n\t\n\tpublic class Order\n\t{\n\t    public ActionLog Actions { get; protected set; }\n\t}\n\t\n\nThis design is suitable for me in the application, however I can't see a clear way to map this scenario to a database with NHibernate.\n\nI typically use Fluent NHibernate for my configuration, but I'm happy to accept answers in more general HBM xml.",
  "lastActivityDate": "2011-12-28T22:23:21.097",
  "title": "Map NHibernate entity to multiple tables based on parent",
  "tags": [
    "nhibernate",
    "fluent-nhibernate"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201003",
  "itemTally": 0,
  "owner": null
}