{
  "id": "/questions/questions/2647183.json",
  "creationDate": "2010-04-15T16:35:27.540",
  "body": "\n\nLet's assume we have two collections:\n\n\tList<double> values\n\tList<SomePoint> points\n\t\n\nwhere `SomePoint` is a type containing three coordinates of the point:\n\n\tSomePoint\n\t{\n\t double X;\n\t double Y;\n\t double Z;\n\t}\n\t\n\nNow, I would like to perform the intersection between these two collections to find out for which points in `points` the `z` coordinate is eqal to one of the elements of `values`\n\nI created something like that:\n\n\tHashSet<double> hash = new HashSet<double>(points.Select(p=>p.Z));\n\thash.IntersectWith(values);\n\tvar result = new List<SomePoints>();\n\tforeach(var h in hash)\n\t    result.Add(points.Find(p => p.Z == h));\n\t\n\nBut it won't return these points for which there is the same `Z` value, but different `X` and `Y`. Is there any better way to do it? ",
  "lastActivityDate": "2010-04-15T16:39:10.647",
  "title": "Intersection between sets containing different types of variables",
  "tags": [
    "c#",
    "collections"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201004",
  "itemTally": 0,
  "owner": null
}